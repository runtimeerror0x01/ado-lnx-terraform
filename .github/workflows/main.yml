name: Build & Push Linux Image To ACR

on:
  push:
    branches:
      - none

env:
  build: false
  deploy: true
  LNX_INSTANCES_COUNT: 1
  AZP_LNX_POOL: default
  ACI_GROUP_NAME: agent1
  ACR_NAME: calmacr
  AZURE_RG: ado-rg
  LNX_AGENT_ROOT: $(Build.SourcesDirectory)/agent
  IMAGE_VERSION: v1.0.0.$(Build.BuildId)
  AZP_URL: $(System.TeamFoundationCollectionUri)
  DNS_SERVERS: ""
  LOCATION: uksouth
 
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Build and Push Image using Azure CLI
      run: |
        az acr login --name ${{ env.ACR_NAME }}
        az acr build -f ${{ env.LNX_AGENT_ROOT }}/Dockerfile \
                     --registry $ACR_NAME ${{ env.LNX_AGENT_ROOT }} \
                     --image "ado-lnx-agent:${{ env.IMAGE_VERSION }}" \
                     --image "ado-lnx-agent:latest" 

  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Deploy Linux Agent ACI
      run: |
        environmentVariables='[
          {"name":"AZP_TOKEN","secureValue":"${{env.AZP_PAT}}"},
          {"name":"AZP_URL","value":"${{env.AZP_URL}}"},
          {"name":"AZP_POOL","value":"${{ env.AZP_LNX_POOL }}"}
        ]'
        [ -n "${{ env.DNS_SERVERS }}" ] && dnsServers="${{ env.DNS_SERVERS }}" || dnsServers="[]"

        # deploy ACI
        az deployment group create \
        --name deploy-aci \
        --resource-group $AZURE_RG \
        --template-file ${{ env.ROOT2 }}/aci/main.bicep \
        --parameters environmentVariables="$environmentVariables" \
                    instances=${{ env.LNX_INSTANCES_COUNT }} \
                    aciGroupName=${{ env.ACI_GROUP_NAME }} \
                    dnsServers="$dnsServers" 

